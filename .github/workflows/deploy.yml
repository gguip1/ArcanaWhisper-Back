name: Deploy to AWS EC2

on:
  push:
    branches:
      - main

env:
  AWS_REGION: ap-northeast-2
  ECR_REPOSITORY: gguip-github-io-ecr

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $ECR_REGISTRY/${{ env.ECR_REPOSITORY }}:${{ github.sha }} .
          docker push $ECR_REGISTRY/${{ env.ECR_REPOSITORY }}:${{ github.sha }}
          echo "image=$ECR_REGISTRY/${{ env.ECR_REPOSITORY }}:${{ github.sha }}" >> $GITHUB_OUTPUT

      - name: Deploy to EC2 using AWS SSM
        env:
          IMAGE_URI: ${{ steps.build-image.outputs.image }}
        run: |
          EC2_CRED_PATH = "/tmp/gcp_credentials.json"
          CONTAINER_CRED_PATH = "/app/gcp_credentials.json" 

          aws ssm send-command \
            --instance-ids ${{ secrets.EC2_INSTANCE_ID }} \
            --document-name "AWS-RunShellScript" \
            --comment "Deploy: ${GITHUB_SHA::7}" \
            --parameters "commands=[
              'aws ecr get-login-password --region ${{ env.AWS_REGION }} | docker login --username AWS --password-stdin ${{ steps.login-ecr.outputs.registry }}',
              'docker stop gguip-github-io-backend || true && docker rm gguip-github-io-backend || true',
              'docker pull ${{ env.IMAGE_URI }}',
              'echo ''${{ secrets.GOOGLE_APPLICATION_CREDENTIALS_JSON }}'' > ${EC2_CRED_PATH}',
              'docker run -d --name gguip-github-io-backend --restart always -p 8000:8000 \
              -v ${EC2_CRED_PATH}:${CONTAINER_CRED_PATH} \
              -e GOOGLE_APPLICATION_CREDENTIALS=${CONTAINER_CRED_PATH} \
              ${{ env.IMAGE_URI }}'

              'rm -f ${EC2_CRED_PATH}'
            ]"
